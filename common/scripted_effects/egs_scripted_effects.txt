clear_egs_start_system_flags = {
	remove_country_flag = EGS_START_SOL
	remove_country_flag = EGS_START_DENEB
	remove_country_flag = EGS_START_RANDOM
	remove_country_flag = EGS_START_RANDOM_BINARY
	remove_country_flag = EGS_START_RANDOM_TRINARY
	remove_country_flag = EGS_START_RINGWORLD
	remove_country_flag = EGS_START_STARBORN
	remove_country_flag = EGS_START_OPS
}

clear_egs_cluster_flags = {
	remove_country_flag = EGS_CLUSTER_APPRENTICE
	remove_country_flag = EGS_CLUSTER_HEXAGON
	remove_country_flag = EGS_CLUSTER_STEED
	remove_country_flag = EGS_CLUSTER_BIG_DIPPER
	remove_country_flag = EGS_CLUSTER_ATRONACH
}

clear_egs_kerbal_flags = {
	remove_country_flag = EGS_KERBAL_YES
	remove_country_flag = EGS_KERBAL_NO
}

clear_egs_gigastructure_flags = {
	remove_country_flag = EGS_GIGA_YES
	remove_country_flag = EGS_GIGA_NO
}

clear_egs_clusterlink_flags = {
	remove_country_flag = EGS_LINK_WORMHOLE
	remove_country_flag = EGS_LINK_MANY_WORMHOLE
	remove_country_flag = EGS_LINK_L_GATE
}

clear_egs_diplo_hack_flags = {
	remove_country_flag = EGS_DIPLO_HACK_YES
	remove_country_flag = EGS_DIPLO_HACK_NO
}

clear_egs_silly_flags = {
	remove_country_flag = EGS_SILLY_YES
	remove_country_flag = EGS_SILLY_NO
}

clear_egs_resource_flags = {
	remove_country_flag = EGS_SR_YES
	remove_country_flag = EGS_SR_NO
}

clear_egs_egc_flags = {
	remove_country_flag = EGS_EGC_YES
	remove_country_flag = EGS_EGC_NO
}

clear_egs_egcconnection_flags = {
	remove_country_flag = EGS_EGC_CONNECTION_DEFAULT
	remove_country_flag = EGS_EGC_CONNECTION_ROUND_ROBIN
	remove_country_flag = EGS_EGC_CONNECTION_L_GATE
}

create_and_share_l_gate = {
	set_star_flag = lgate
	spawn_megastructure = {
		type = lgate_base
		orbit_angle = 225
		orbit_distance = 30
	}
	every_system_planet = {
		limit = {
			is_star = yes
		}
		# everyone else needs to know the location of the Lgate
		every_country = {
			prev = {
				set_surveyed = {
					surveyed = yes
					surveyor = ROOT
				}
				set_all_comms_surveyed = yes
			}
		}
	}
}

create_and_link_wormholes = {
	event_target:egs_wormhole_1 = {
		spawn_natural_wormhole = {
			bypass_type = wormhole
			random_pos = yes
			orbit_angle = 360
		}
	}
	event_target:egs_wormhole_2 = {
		spawn_natural_wormhole = {
			bypass_type = wormhole
			random_pos = yes
			orbit_angle = 360
		}
		link_wormholes = event_target:egs_wormhole_1
	}
}

egs_remove_duplicate_building = {
	if = {
		limit = {
			num_buildings = {
				type = $BUILDING$
				value > 1
			}
		}
		remove_building = $BUILDING$
	}
}