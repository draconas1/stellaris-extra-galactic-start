namespace = egs_colony
#move the home sysem
country_event = {
	id = egs_colony.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# put everything into an empire cluster
		every_system = {
			limit = {
				egs_select_all_relevant_systems = yes
			}
			set_star_flag = empire_cluster
		}

		# then tag our new ones
		random_system = {
			limit = {				
				OR = {
					AND = {
						has_star_flag = egs_empire_home
						egs_county_player1 = yes
					}
					AND = {
						has_star_flag = egs_p2_empire_home
						egs_county_player2 = yes
					}
				}
			}
			save_event_target_as = egs_home_system
			random_system_planet = {
				limit = {
					OR = {
						AND = {
							has_planet_flag = egs_home_planet_marker
							egs_county_player1 = yes
						}
						AND = {
							has_planet_flag = egs_p2_home_planet_marker
							egs_county_player2 = yes
						}
					}
				}
				save_event_target_as = egs_home_planet
			}
		}

		

		#tag our old home planet
		capital_scope = {
			save_event_target_as = previous_home_planet
			solar_system = {
				save_event_target_as = previous_home_system
			}
			# taken from gigastructures.  Go gigas!
			if = {
				limit = { exists = sector }
				if = {
					limit = { exists = sector }
					sector.sector_capital = {
						leader = {
							unassign_leader = this
							save_event_target_as = sector_gov
						}
					}
				}
			}
			else = {
				root = {
					random_owned_leader = {
						limit = {
							is_ruler = no
							leader_class = official
						}
						save_event_target_as = sector_gov
					}
				}
			}
		}

		#set the correct planet class for home planet
		# hooray for 3.2!  and for Alfray Stryke (QA) & Caligula on discord for showing me how to shove a planet/species into change_pc!
		if = {
			limit = { has_country_flag = EGS_START_OPS }
			event_target:egs_home_planet = { change_pc = event_target:previous_home_planet }
			event_target:egs_home_system = {
				every_system_planet = {
					limit = { has_planet_flag = ops_starter }
					change_pc = event_target:previous_home_planet
				}
				system_event = { id = ops_events.10 }
			}
		}
		else = {
			event_target:previous_home_planet = {
				event_target:egs_home_planet = {
					save_event_target_as = egs_target_planet
					if = {
						limit = {
							NOR = {
								has_planet_flag = egs_ringworld
								has_planet_flag = egs_p2_ringworld
							}
						}
						change_pc = prev
						reroll_deposits = yes
						reroll_planet_modifiers = yes
					}
				}
			}
		}

		

		#Set the correct class for secondary planets
		#Go developers putting a bloody flag on the secondary planet!
		# starborn do not get secondary planets
		# species scope first to set the planet class
		event_target:previous_home_planet = {
			every_system = {
				limit = {
					OR = {
						AND = {
							has_star_flag = egs_cluster
							egs_county_player1 = yes
						}
						AND = {
							has_star_flag = egs_p2_cluster
							egs_county_player2 = yes
						}
					}
				}
				every_system_planet = {
					limit = {
						has_planet_flag = prescripted_ideal	
					}
					save_event_target_as = egs_target_planet

					if = {
						limit = {
							root = {
								OR = {
									has_country_flag = EGS_START_STARBORN
								}
							}
						}
						change_pc = pc_nuked
					}
					else = {
						change_pc = prevprev
					}
					
					reroll_deposits = yes
					reroll_planet_modifiers = yes

					if = {
						limit = {
							root = {
								OR = {
									has_country_flag = EGS_START_RINGWORLD
									has_country_flag = EGS_START_STARBORN
									has_country_flag = EGS_START_OPS
								}
								has_country_flag = EGS_SILLY_YES
							}
						}
						event_target:egs_target_planet = {
							change_pc = pc_relic
						}
	
						event_target:egs_target_planet = {
							clear_deposits = yes
							relic_world_deposits = yes
							set_planet_flag = pd_ignore
						}
					}
				}
			}
		}
		
		# Set up the spaceport
		if = {
			limit = {
				is_gestalt = yes
			}
			event_target:egs_home_system = {
				create_starbase = {
					size = "starbase_starport"
					module = "shipyard"
					module = "solar_panel_network"
					building = "crew_quarters"
					owner = root
				}
			}
		}
		else = {
			event_target:egs_home_system = {
				create_starbase = {
					size = "starbase_starport"
					module = "shipyard"
					module = "trading_hub"
					building = "crew_quarters"
					owner = root
				}
			}
		}

		# make planet habitable
		event_target:egs_home_planet = {
			remove_deposit = yes
			remove_planet_flag = starting_deposit
			remove_planet_flag = starting_mining_target
			remove_planet_flag = starting_research_target
			clear_planet_modifiers = yes
			clear_blockers = yes
			set_owner = root
			set_controller = root
			set_capital = yes
			set_sector_capital = yes
			if = {
				limit = { exists = event_target:sector_gov}
				assign_leader = event_target:sector_gov
			}

			if = {
				# Ringworld setup
				limit = {
					OR = {
						has_planet_flag = egs_ringworld
						has_planet_flag = egs_p2_ringworld
					}
				}
				set_planet_flag = ignore_startup_effect # important, otherise gets cleared by the solar system initaliser generate_home_system_resources below
				remove_all_districts = yes
				set_planet_size = 10

				if = {
					limit = {
						root = {
							is_robot_empire = yes
						}
					}
					add_district = district_rw_nexus
				}
				else_if = {
					limit = {
						root = {
							is_hive_empire = yes
						}
					}
					add_district = district_rw_hive
				}
				else = {
					add_district = district_rw_city
				}

				add_district = district_rw_industrial
				add_deposit = d_egs_rw_motes

				if = {
					limit = {
						root = {
							OR = {
								is_robot_empire = yes
								is_lithoid_empire = yes
							}
						}
					}
					add_district = district_rw_generator
					add_deposit = d_egs_rw_crystals
				}
				else = {
					add_district = district_rw_farming
					add_deposit = d_egs_rw_motes
				}
			}

			planet_event = { id = game_start.12 }
			planet_event = { id = egs_colony.10 days = 1 }

			# that has created a bunch of pops, that are probably wrong
			every_owned_pop_group = {
				kill_all_pop = yes
			}

			event_target:previous_home_planet = {
				every_owned_pop_group = {
					resettle_pop_group = {
						POP_GROUP = this
						PLANET = event_target:egs_home_planet
						PERCENTAGE = 1
					}
				}
			}

			every_owned_pop_group = {
				unemploy_pop = yes
			}


			if = {
				limit = { has_planet_flag = egs_ops_home }
				ops_init_home_planet = yes
				set_planet_flag = ignore_startup_effect # important, otherwise gets cleared by the solar system initaliser generate_home_system_resources below
			}
		}

		event_target:egs_home_system = {
			if = {
				limit = { ROOT = { NOT = { has_country_flag = EGS_START_OPS }}}
				generate_home_system_resources = yes
			}
			random_system_planet = {
				limit = {
					is_star = yes
				}
				save_event_target_as = egs_home_system_loc
			}
			every_system_planet = {
				limit = {
					has_planet_flag = starting_mining_target
				}
				create_mining_station = {
					owner = root
				}
			}
			every_system_planet = {
				limit = {
					has_planet_flag = starting_research_target
				}
				create_research_station = {
					owner = root
				}
			}
		}
		
		every_owned_fleet = {
			limit = {
				any_owned_ship = {
					NOR = {
						is_ship_class = shipclass_military_station
						is_ship_class = shipclass_mining_station
						is_ship_class = shipclass_research_station
						is_ship_class = shipclass_starbase
					}
				}
			}
			set_location = event_target:egs_home_system_loc
		}

		event_target:previous_home_planet = {
			remove_planet = yes
		}

		event_target:previous_home_system = {
			set_name = random
			random_system_planet = {
				limit = {
					is_star = yes
				}
				set_name = solar_system
			}
			
			remove_star_flag = sol
			remove_star_flag = deneb_system
		}

		if = {
			limit = {
				NOT = { has_country_flag = EGS_DIPLO_HACK_YES }
			}
			event_target:previous_home_system = {
				every_fleet_in_system = {
					delete_fleet = this
				}
            }
		}

		owner_species = { 
			set_species_homeworld = event_target:egs_home_planet 
		}
		every_owned_pop_species = {
            set_species_homeworld = event_target:egs_home_planet
        }


		if = {
			limit = {
				has_country_flag = EGS_START_RINGWORLD
			}
			add_resource = {
				energy = 5000
				minerals = 5000				
            }
		}

		country_event = {
			id = egs_colony.100
		}

		if = {
			limit = {
				has_global_flag = planetarydiversity
			}
			event_target:egs_home_planet = {
				if = {
					limit = {
						is_planet_class = pc_superhabitable
					}
					change_planet_size = +9
				}
				if = {
					limit = {
						is_planet_class = pc_gaia
					}
					add_deposit  = d_pdgaia 
				}
				else = {
					if = {
						limit = {
							NOR = {
								has_planet_flag = giga_alderson_gaia								
								has_planet_flag = planet_earth
								is_planet_class = pc_ringworld_habitable
							}		
						}
						generate_pd_start_deposits_and_blockers = yes
					}					
				}
			}

		}

		# put GPM modifiers on everything
		if = {
			limit = {
				has_global_flag = guillis_planet_modifiers_active
			}
			every_system = {
				limit = {
					egs_select_all_relevant_systems = yes
				}
				every_system_planet = {
					planet_event = {
						id = gpm_engine.1
					}
				}
			}
		}
	}
}

# spawn fix event where occasionally we would be stuck with a colony shelter.
# this is dodgy as hell, but works!
# no event = colony shelter
# hit the first if = 2 capitals, guarenteed
# so remove down afterwards.
planet_event = {
	id = egs_colony.10
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				NOT = { has_building = building_capital }
			}
			add_building = building_capital
			remove_building = building_colony_shelter
		}
		if = {
			limit = {
				num_buildings = {
					type = building_capital
					value > 1
				}
			}
			remove_building = building_capital
		}
	}
}

# setup bypasses
country_event = {
	id = egs_colony.100
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				egs_link_l_gate = no
			}
			event_target:previous_home_system = {
				event_target:egs_cluster_root = {
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = yes
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
				link_wormholes = event_target:egs_cluster_root
			}
		}

		if = {
			limit = {
				egs_link_l_gate = yes
			}

			# you need to know about every other Lgate so you can exit the L cluster.
			every_system = {
				limit = {
					has_star_flag =  lgate
				}
				every_system_planet = {
					limit = {
						is_star = yes
					}
					set_surveyed = {
						surveyed = yes 
						surveyor = ROOT
					}
					set_all_comms_surveyed = yes
				}

			}

			event_target:egs_cluster_root = {
				set_star_flag = lgate
				spawn_megastructure = {
					type = lgate_base
					orbit_angle = 225
					orbit_distance = 30
				}
			}
			# everyone else needs to know the location of your Lgate so they can invade you
			event_target:egs_cluster_root = {
				every_system_planet = {
					limit = {
						is_star = yes
					}
					# everyone else needs to know the location of the Lgate
					every_country = {
						limit = {
							NOT =  { is_same_empire = root }
						}
						prev = {				
							set_surveyed = {
								surveyed = yes 
								surveyor = ROOT
							}
							set_all_comms_surveyed = yes
						}
					}
				}
			}
		}

		country_event = { id = egs_colony.200 }
	}
}

#setup guarenteed resources
country_event = {
	id = egs_colony.200
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				egs_resources = yes
			}		
			random_galaxy_planet = {
				limit = {
					suitable_egs_planet_for_sr = yes			
				}
				add_deposit = d_rare_crystals_3
			}

			random_galaxy_planet = {
				limit = {
					suitable_egs_planet_for_sr = yes			
				}
				add_deposit = d_volatile_motes_3
			}

			random_galaxy_planet = {
				limit = {
					suitable_egs_planet_for_sr = yes			
				}
				add_deposit = d_exotic_gases_3
			}

			random_galaxy_planet = {
				limit = {
					suitable_egs_planet_for_sr = yes			
				}
				add_deposit = d_zro_deposit_3
			}

			random_galaxy_planet = {
				limit = {
					suitable_egs_planet_for_sr = yes			
				}
				add_deposit = d_living_metal_deposit
				root = {
					add_research_option = tech_mine_living_metal
				}
			}
		}

		# Set a planet suitable for an attack planet
		if = {
			limit = {
				egs_gigastructures = yes
			}
			if = {
				limit = {
					NOT = {
						any_galaxy_planet = {
							solar_system = { egs_select_all_relevant_systems = yes }
							planet_size >= 24
							OR = {
								is_planet_class = pc_barren
								is_planet_class = pc_barren_cold
							}
						}
					}
				}
				random_galaxy_planet = {
					limit = {
						solar_system = { 
							egs_select_all_relevant_systems = yes 
							egs_home_system = no
						}
						OR = {
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
						}						
					}
					set_planet_size = 25
				}
			}
		}
	}
}


